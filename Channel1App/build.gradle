apply plugin: 'com.android.application'

buildscript {
    repositories {
    }
    dependencies {

    }
    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
    }
}

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId "com.danxx.views"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"

        ndk{
            moduleName "DanxxJniLibName"         //生成的so名字
            abiFilters "armeabi", "armeabi-v7a", "x86"  //输出指定三种abi体系结构下的so库。目前可有可无。
        }

    }

    aaptOptions {
        cruncherEnabled = false
        useNewCruncher = false
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    testCompile 'junit:junit:4.12'
    compile "com.android.support:appcompat-v7:$rootProject.ext.supportVersion"
    compile "com.android.support:recyclerview-v7:$rootProject.ext.supportVersion"
    compile "com.android.support:cardview-v7:$rootProject.ext.supportVersion"
    compile 'com.squareup.okio:okio:1.13.0'

    compile project(':AppLibrary')
    compile project(':Aoplib')
    compile project(':Dximageloader')
}

android.applicationVariants.all { variant ->
    JavaCompile javaCompile = variant.javaCompile
    javaCompile.doLast {
        String bootclasspath = project.android.bootClasspath.join(File.pathSeparator)
        ajc(bootclasspath, javaCompile)
    }
}